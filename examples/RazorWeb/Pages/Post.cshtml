@page
@model SinglePostWithComments<StandardPost>
@{
    ViewData["Title"] = !string.IsNullOrEmpty(Model.Data.MetaTitle) ? Model.Data.MetaTitle : Model.Data.Title;
    var hasImage = Model.Data.PrimaryImage.HasValue;
    var archive = await WebApp.Api.Pages.GetByIdAsync(Model.Data.BlogId);
}
@section head {
    @WebApp.MetaTags(Model.Data)
}

<header @(hasImage ? "class=has-image" : "") @(hasImage ? $"style=background-image:url({ @Url.Content(WebApp.Media.ResizeImage(Model.Data.PrimaryImage, 1920, 400)) })" : "")>
    <div class="dimmer"></div>
    <div class="container text-center">
        <h1>@Model.Data.Title</h1>
        <p class="post-meta">
            <span>
                In <a href="@archive.Permalink/category/@Model.Data.Category.Slug">@Model.Data.Category.Title</a>
            </span>
            <span>
                Tags
                @foreach (var tag in Model.Data.Tags)
                {
                    <a href="@archive.Permalink/tag/@tag.Slug">#@tag.Slug</a>
                }
            </span>
            @if (Model.Data.IsPublished)
            {
                <span>
                    Published @Model.Data.Published.Value.ToShortDateString()
                </span>
            }
            @if (Model.Data.EnableComments && Model.Data.CommentCount > 0)
            {
                <span>
                    <a href="#comments">@Model.Data.CommentCount @(Model.Data.CommentCount == 1 ? "comentário" : "comentários")</a>
                </span>
            }
        </p>
        @if (!string.IsNullOrWhiteSpace(Model.Data.Excerpt))
        {
            <div class="row justify-content-center">
                <div class="col-lg-8 lead">
                    @Html.Raw(Model.Data.Excerpt)
                </div>
            </div>
        }
    </div>
</header>

<main>
    @foreach (var block in Model.Data.Blocks)
    {
        <div class="block @block.CssName()">
            <div class="container">
                @Html.DisplayFor(m => block, block.GetType().Name)
            </div>
        </div>
    }
    @if (Model.Data.EnableComments)
    {
        <div id="comments" class="container comments">
            @if (Model.Data.IsCommentsOpen)
            {
                <div class="alert alert-comment mt-2 mb-5">
                    <form asp-page-handler="SaveComment" method="post">
                        @Html.AntiForgeryToken()
                        @Html.Hidden("Id", Model.Data.Id)

                        <h3 class="mb-3">Deixe seu coment&aacute;rio</h3>
                        <p class="mb-4">
                            Observe que n&atilde;o mostraremos seu e-mail a outras pessoas nem o usaremos para enviar
                            e-mails indesejados.
                        </p>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <input name="CommentAuthor" type="text" class="form-control" placeholder="Seu nome">
                                </div>
                            </div>
                            <div class="col-md-6">
                                <input name="CommentEmail" type="text" class="form-control" placeholder="Seu e-mail">
                            </div>
                        </div>
                        <div class="form-group">
                            <input name="CommentUrl" type="text" class="form-control" placeholder="(opicional) URL do seu site">
                        </div>
                        <div class="form-group">
                            <textarea name="CommentBody" rows="6" class="form-control" placeholder="Seu coment&aacute;rio"></textarea>
                        </div>
                        <div class="form-group text-left">
                            <button class="btn btn-success">Publicar coment&aacute;rio</button>
                        </div>
                    </form>
                </div>
            }
            @Html.DisplayFor(m => m.Comments)
        </div>
    }
</main>
